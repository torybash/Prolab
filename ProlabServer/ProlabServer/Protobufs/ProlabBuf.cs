// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProlabBuf.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ProlabServer {

  /// <summary>Holder for reflection information generated from ProlabBuf.proto</summary>
  public static partial class ProlabBufReflection {

    #region Descriptor
    /// <summary>File descriptor for ProlabBuf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProlabBufReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9Qcm9sYWJCdWYucHJvdG8SCHR1dG9yaWFsIn4KClBsYXllckRhdGESCgoC",
            "aWQYASABKAUSKQoFc3RhdGUYAiABKA4yGi50dXRvcmlhbC5QbGF5ZXJEYXRh",
            "LlN0YXRlEgwKBHBvc3gYAyABKAUSDAoEcG9zeRgEIAEoBSIdCgVTdGF0ZRII",
            "CgRNRU5VEAASCgoGQUNUSVZFEAEiNQoIR2FtZURhdGESKQoLcGxheWVyRGF0",
            "YXMYASADKAsyFC50dXRvcmlhbC5QbGF5ZXJEYXRhIisKC0NsaWVudElucHV0",
            "Eg0KBW1vdmV4GAEgASgFEg0KBW1vdmV5GAIgASgFQjgKFGNvbS5leGFtcGxl",
            "LnR1dG9yaWFsQhFBZGRyZXNzQm9va1Byb3Rvc6oCDFByb2xhYlNlcnZlcmIG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ProlabServer.PlayerData), global::ProlabServer.PlayerData.Parser, new[]{ "Id", "State", "Posx", "Posy" }, null, new[]{ typeof(global::ProlabServer.PlayerData.Types.State) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProlabServer.GameData), global::ProlabServer.GameData.Parser, new[]{ "PlayerDatas" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProlabServer.ClientInput), global::ProlabServer.ClientInput.Parser, new[]{ "Movex", "Movey" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// [START messages]
  /// </summary>
  public sealed partial class PlayerData : pb::IMessage<PlayerData> {
    private static readonly pb::MessageParser<PlayerData> _parser = new pb::MessageParser<PlayerData>(() => new PlayerData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProlabServer.ProlabBufReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerData(PlayerData other) : this() {
      id_ = other.id_;
      state_ = other.state_;
      posx_ = other.posx_;
      posy_ = other.posy_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerData Clone() {
      return new PlayerData(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// Unique ID number for this person.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private global::ProlabServer.PlayerData.Types.State state_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProlabServer.PlayerData.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "posx" field.</summary>
    public const int PosxFieldNumber = 3;
    private int posx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Posx {
      get { return posx_; }
      set {
        posx_ = value;
      }
    }

    /// <summary>Field number for the "posy" field.</summary>
    public const int PosyFieldNumber = 4;
    private int posy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Posy {
      get { return posy_; }
      set {
        posy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (State != other.State) return false;
      if (Posx != other.Posx) return false;
      if (Posy != other.Posy) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (Posx != 0) hash ^= Posx.GetHashCode();
      if (Posy != 0) hash ^= Posy.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (State != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (Posx != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Posx);
      }
      if (Posy != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Posy);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (Posx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Posx);
      }
      if (Posy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Posy);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerData other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.Posx != 0) {
        Posx = other.Posx;
      }
      if (other.Posy != 0) {
        Posy = other.Posy;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            state_ = (global::ProlabServer.PlayerData.Types.State) input.ReadEnum();
            break;
          }
          case 24: {
            Posx = input.ReadInt32();
            break;
          }
          case 32: {
            Posy = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PlayerData message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum State {
        [pbr::OriginalName("MENU")] Menu = 0,
        [pbr::OriginalName("ACTIVE")] Active = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// Our address book file is just one of these.
  /// </summary>
  public sealed partial class GameData : pb::IMessage<GameData> {
    private static readonly pb::MessageParser<GameData> _parser = new pb::MessageParser<GameData>(() => new GameData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProlabServer.ProlabBufReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameData(GameData other) : this() {
      playerDatas_ = other.playerDatas_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameData Clone() {
      return new GameData(this);
    }

    /// <summary>Field number for the "playerDatas" field.</summary>
    public const int PlayerDatasFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ProlabServer.PlayerData> _repeated_playerDatas_codec
        = pb::FieldCodec.ForMessage(10, global::ProlabServer.PlayerData.Parser);
    private readonly pbc::RepeatedField<global::ProlabServer.PlayerData> playerDatas_ = new pbc::RepeatedField<global::ProlabServer.PlayerData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ProlabServer.PlayerData> PlayerDatas {
      get { return playerDatas_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!playerDatas_.Equals(other.playerDatas_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= playerDatas_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      playerDatas_.WriteTo(output, _repeated_playerDatas_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += playerDatas_.CalculateSize(_repeated_playerDatas_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameData other) {
      if (other == null) {
        return;
      }
      playerDatas_.Add(other.playerDatas_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            playerDatas_.AddEntriesFrom(input, _repeated_playerDatas_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ClientInput : pb::IMessage<ClientInput> {
    private static readonly pb::MessageParser<ClientInput> _parser = new pb::MessageParser<ClientInput>(() => new ClientInput());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProlabServer.ProlabBufReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientInput(ClientInput other) : this() {
      movex_ = other.movex_;
      movey_ = other.movey_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientInput Clone() {
      return new ClientInput(this);
    }

    /// <summary>Field number for the "movex" field.</summary>
    public const int MovexFieldNumber = 1;
    private int movex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Movex {
      get { return movex_; }
      set {
        movex_ = value;
      }
    }

    /// <summary>Field number for the "movey" field.</summary>
    public const int MoveyFieldNumber = 2;
    private int movey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Movey {
      get { return movey_; }
      set {
        movey_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Movex != other.Movex) return false;
      if (Movey != other.Movey) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Movex != 0) hash ^= Movex.GetHashCode();
      if (Movey != 0) hash ^= Movey.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Movex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Movex);
      }
      if (Movey != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Movey);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Movex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Movex);
      }
      if (Movey != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Movey);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientInput other) {
      if (other == null) {
        return;
      }
      if (other.Movex != 0) {
        Movex = other.Movex;
      }
      if (other.Movey != 0) {
        Movey = other.Movey;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Movex = input.ReadInt32();
            break;
          }
          case 16: {
            Movey = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
